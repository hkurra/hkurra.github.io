{"pageProps":{"posts":[{"title":"Really very useful, But i just want to correct one thing, The documentations for Medium rest API is…","pubDate":"2020-08-31 12:59:57","link":"https://medium.com/@harshkurra21/really-very-useful-but-i-just-want-to-correct-one-thing-the-documentations-for-medium-rest-api-d66ac8e8b6fd?source=rss-9e09aaed77b0------2","guid":"https://medium.com/p/d66ac8e8b6fd","author":"Harsh Kurra","thumbnail":"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=d66ac8e8b6fd","description":"\n<p>Really very useful, But i just want to correct one thing, The documentations for Medium rest API is available here <a href=\"https://github.com/Medium/medium-api-docs\">https://github.com/Medium/medium-api-docs</a>.</p>\n<p>A Auth token will be available to user which has A profile name, A bio, An avatar and, Two samples of your writing published to Medium</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=d66ac8e8b6fd\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<p>Really very useful, But i just want to correct one thing, The documentations for Medium rest API is available here <a href=\"https://github.com/Medium/medium-api-docs\">https://github.com/Medium/medium-api-docs</a>.</p>\n<p>A Auth token will be available to user which has A profile name, A bio, An avatar and, Two samples of your writing published to Medium</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=d66ac8e8b6fd\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":[]},{"title":"Web Accessibility(A11y): WAI-ARIA Attributes","pubDate":"2020-08-23 20:51:47","link":"https://levelup.gitconnected.com/web-accessibility-a11y-wai-aria-attributes-53d54da8627e?source=rss-9e09aaed77b0------2","guid":"https://medium.com/p/53d54da8627e","author":"Harsh Kurra","thumbnail":"https://cdn-images-1.medium.com/max/1024/1*_KSmc9U3Ql0kj5N9LmbAag.png","description":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*_KSmc9U3Ql0kj5N9LmbAag.png\"></figure><h3>Introduction</h3>\n<p>In the <a href=\"https://medium.com/@harshkurra21/web-accessibility-a11y-right-to-web-content-equality-951bfd2ebdfb?sk=ba953c8f0c32329640bdbdc980d25cc7\">previous story</a>, we learned about the importance of web accessibility and how we can achieve that using standard HTML, CSS, and JS. We have learned that <strong>WAI-ARIA </strong>defines a set of additional <strong>HTML</strong> attributes that can be applied to elements to provide additional semantics and improve openness wherever it is lacking for Assistive technologies(using OS APIs).</p>\n<p>From an <strong>HTML</strong> angle, <strong>WAI-ARIA </strong>provides extra attributes applicable to all HTML elements. An important point about <strong>WAI-ARIA</strong> <strong>attributes</strong> is that they don’t affect anything on the web page, except for the information exposed by the browser’s accessibility APIs</p>\n<p>In the previous story, we have also learned that Accessibility does not just mean “blind users with screen readers”, but sighted keyboard users, users with colour blindness/deficiencies, deaf/hard of hearing users, users with cognitive disabilities. however, ARIA is (almost) exclusively about<strong> how to ensure that web content is correctly conveyed to assistive technologies</strong> (screen readers, screen magnifiers with screen reading capability, etc)</p>\n<h3><strong>Assistive technologies</strong></h3>\n<p>Software or Applications which help the differently-abled people to use web/other applications like a normal user are Assistive technologies.</p>\n<ul>\n<li>JAWS</li>\n<li>ZoomText</li>\n<li>NVDA (free)</li>\n<li>VoiceOver (free)</li>\n<li>TalkBack (free)</li>\n<li>\n<a href=\"http://chromevox.com/\">ChromeVox</a> extension</li>\n</ul>\n<p>All these tools and application depends on OS-specific APIs for Accessibility and they help the differently-abled people to use web application like a normal user</p>\n<p>Web-based Assistive technologies depend on <strong>WAI-ARIA </strong>attributes and semantically correct HTML Elements to work seamlessly for a differently-abled person, basically, they act as bridge b/w OS Accessibility API and <strong>WAI-ARIA </strong>attributes instructions.</p>\n<h3>WAI-ARIA Categories</h3>\n<p>There are three main features/categories defined in the spec for these WAI-ARIA attributes:</p>\n<ul><li>\n<strong>Roles: </strong>it defines what an element is or does. it provides only one attribute which is <strong>ROLE</strong>, such as role=\"banner\", role=\"search\", role=\"tabgroup\", role=\"tab\" for a complete list of the role, visit <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques\">MDN reference here</a>. Each role further has different <strong>WAI-ARIA attribute </strong>applicable to that particular role eg aria-pressed wai-aria attribute will be available to use when you specify button role on your element. (Roles are categorized as <strong>Abstract Roles, Widget Roles, Document Structure Roles, Landmark Roles, Live Region Roles, Window Roles. </strong>Please find their details in above MDN reference)</li></ul>\n<a href=\"https://medium.com/media/2271da0ebcfb911286f3c5e69e04ca4d/href\">https://medium.com/media/2271da0ebcfb911286f3c5e69e04ca4d/href</a><ul><li>\n<strong>Properties: </strong>These define the properties of elements, which can be used to give them extra meaning or semantics. As an example, aria-required=\"true\" specifies that a form of input needs to be filled in to be valid.</li></ul>\n<a href=\"https://medium.com/media/9a8d4aced19b6d1f54f6b26be3fe3633/href\">https://medium.com/media/9a8d4aced19b6d1f54f6b26be3fe3633/href</a><ul><li>\n<strong>States: </strong>Special attributes that define the current conditions of elements, such as aria-disabled=\"true\"</li></ul>\n<a href=\"https://medium.com/media/2edaf7291a68f161c2561df70ada149a/href\">https://medium.com/media/2edaf7291a68f161c2561df70ada149a/href</a><h3><strong>When should you use WAI-ARIA?</strong></h3>\n<p>We talked about custom button problems in the <a href=\"https://medium.com/@harshkurra21/web-accessibility-a11y-right-to-web-content-equality-951bfd2ebdfb?sk=ba953c8f0c32329640bdbdc980d25cc7\">previous story</a> that prompted<strong> WAI-ARIA</strong> to be created earlier on</p>\n<a href=\"https://medium.com/media/d350a05d9db4fa1d1cc337cc738320d1/href\">https://medium.com/media/d350a05d9db4fa1d1cc337cc738320d1/href</a><p>Essentially, there are four main areas that WAI-ARIA is useful in:</p>\n<ul>\n<li>\n<strong>Landmarks: </strong>To specify the landmark/section on your web page<strong> using </strong>role attribute eg. specify <strong><em>search</em></strong> <em>role</em> to search section as we have seen above</li>\n<li>\n<strong>live-updates: </strong>static text can be easily accessed by screenreader but modern web page load most of the content dynamically and <strong><em>aria-live </em></strong>attribute helps us to specify the accessibility of area whose content will load dynamically into DOM using web APIs. Applying this attribute to an element causes screenreaders to read out the content that is updated, How urgently the content is read out depends on the attribute value:</li>\n<li>polite: Updates should be announced only if the user is idle.</li>\n<li>assertive: Updates should be announced to the user as soon as possible.</li>\n<li>off: The default. Updates should not be announced.</li>\n</ul>\n<p>Below is the sample code to understand how aria-live can be helpful for the screen reader to read the dynamically available content.</p>\n<a href=\"https://medium.com/media/85e504129e0a3443be042d660a797856/href\">https://medium.com/media/85e504129e0a3443be042d660a797856/href</a><a href=\"https://medium.com/media/970e395971bd9cbf3014059aae75a573/href\">https://medium.com/media/970e395971bd9cbf3014059aae75a573/href</a><a href=\"https://medium.com/media/d3ae231893c1b1c64167d6281b688c7a/href\">https://medium.com/media/d3ae231893c1b1c64167d6281b688c7a/href</a><p><strong>keyboard accessibility: </strong>As discussed in a few other places in this article, one of the key strengths of <strong>HTML</strong> with respect to accessibility is the built-in keyboard accessibility(<strong>tabbable</strong>) for an element like Button, but for complex controls, this will not be available by default but to make them keyboard accessible(particularly using the tab key to move between controls), WAI-ARIA extends the tabindex attribute with some new values:</p>\n<ul>\n<li>tabindex=\"-1\" — this allows not normally tabbable elements to receive focus programmatically, e.g. via JavaScript, or as the target of links.<br><strong>non-semantic controls</strong>\n</li>\n<li>tabindex=\"0\" — this value allows elements that are not normally <strong>tabbable</strong> to become <strong>tabbable</strong>. This is the most useful value of tabindex.</li>\n</ul>\n<h3>What ARIA doesn’t do…</h3>\n<p>ARIA is <strong>not magic</strong>: it only changes how <strong>assistive technology</strong> interprets content. specifically, <strong>ARIA does not</strong>:</p>\n<ul>\n<li>make an element focusable</li>\n<li>provide appropriate keyboard bindings</li>\n<li>change browser behaviour</li>\n<li>automatically maintain/update properties</li>\n<li>change visible appearance</li>\n</ul>\n<p>all of this is still your responsibility…</p>\n<blockquote>No ARIA is better than bad ARIA</blockquote>\n<ul>\n<li>ARIA roles/attributes are a “promise” to users / assistive technologies (e.g. “this component is actually a button…”) — you must ensure that it then behaves correctly</li>\n<li>if you’re not sure how to represent a particular complex widget or control, don’t just throw ARIA roles and attributes at your markup — you’re more likely to make things worse / more confusing / non-functional for assistive technology users</li>\n</ul>\n<h4>List of Popular/Important ARIA Attribute</h4>\n<ul>\n<li>aria-required</li>\n<li>role</li>\n<li>aria-label</li>\n<li><a href=\"https://www.w3.org/TR/wai-aria-1.1/#aria-labelledby\">aria-labelledby</a></li>\n<li><a href=\"https://www.w3.org/TR/wai-aria-1.1/#aria-disabled\">aria-disabled</a></li>\n<li>\n<a href=\"https://www.w3.org/TR/wai-aria-1.1/#aria-selected\">aria-selected</a> : tab selection</li>\n<li>aria-hidden</li>\n<li>aria-checked</li>\n<li>aria-expanded</li>\n<li>aria-setsize</li>\n<li>aria-posinset</li>\n</ul>\n<p>Complete list of all properties and state-based ARIA attribute can be found <a href=\"https://www.w3.org/TR/wai-aria-1.1/#state_prop_def\">here</a></p>\n<h3>Tools</h3>\n<p>There are a number of tools available to test the accessibility in your web application or website. W3.org has listed all <a href=\"https://www.w3.org/WAI/ER/tools/\">Accessibility evaluation tools Here</a>, I have not tried all of them but checked a few of them and also found some of them are outdated.<br>I personally using</p>\n<ul>\n<li>\n<a href=\"https://chrome.google.com/webstore/detail/chromevox-classic-extensi/kgejglhpjiefppelpmljglcjbhoiplfn?hl=en\">ChromeVox Classic extension</a> to test screen reader based accessibility for my application</li>\n<li>VoiceOver screen reader available on mac by default</li>\n<li>Also using <a href=\"https://github.com/Muhnad/a11y-checker\">a11y-checker </a>open-source automated tool to test accessibility issues in HTML markup. I have found this in w3.org listing. this is quite good and support all modern <a href=\"https://9yly237pkr.codesandbox.io/\">front-end framework like React</a>.</li>\n<li>There are extension and plugins available for all major Text editor starting from VSCode(I have not tried anyone as of now)</li>\n<li>All major browsers support Accessible Tab/Pane to view <strong>accessibility tree</strong>, <strong>ARIA attributes</strong>, and <strong>computed accessibility properties of DOM nodes</strong>.</li>\n</ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*uADYQgdK7F1DCl2DwAzhPw.png\"><figcaption>Screen-shot from Chrome Accessibility-Pane</figcaption></figure><ul><li>From Chrome V84 onwards Accessibility info of element also available as a tooltip on hovering element in inspect mode</li></ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*1GOxwYkYtbMSGMKlk02D8w.png\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/926/1*5KpAQwdow3QiL86Y3oBFNQ.png\"></figure><ul><li>Use Chrome Audit panel to determine if A page is properly marked up for screen readers.(<a href=\"https://developers.google.com/web/tools/chrome-devtools/accessibility/reference\">Chrome Accessibility testing Reference</a> )</li></ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*a_rN3WU26SIGU8kKAHXbIQ.png\"></figure><ul><li>Other people are also incorporating <a href=\"https://github.com/dequelabs/axe-cli\">aXe</a> or <a href=\"https://github.com/pa11y/pa11y\">pa11y</a> into their build steps</li></ul>\n<p>If you have better tools or toolchain then you can share the same in the comment section.</p>\n<h3>The accessibility tree</h3>\n<p><a href=\"https://developers.google.com/web/fundamentals/accessibility/semantics-builtin/the-accessibility-tree\">The accessibility tree</a> is a subset of the DOM tree. It only contains elements from the DOM tree that are relevant and useful for displaying the page’s contents in a screen reader or Assistive Technologies.</p>\n<h3>Conclusion</h3>\n<p>Like the previous story, this story is based on my learning experience from different resources over the internet mostly from MDN.</p>\n<p>In this story, I have tried my best to provide the usage details of WAI-ARIA Attributes and How they help the Assistive technologies based Application like screen-reader to provide web content accessibility to differently-abled people.</p>\n<p>In some section, I have provided a detailed reference of MDN resources, I would prefer to go through them. I will try to provide a detailed case-study on “Enabling Asseccabilty in complex widgets like Calendar &amp; ProgressBar ” in future till then <strong>Stay Safe! </strong>and don't forget to provide the feedback in the comment section.</p>\n<p><strong>Happy Coding!</strong></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=53d54da8627e\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://levelup.gitconnected.com/web-accessibility-a11y-wai-aria-attributes-53d54da8627e\">Web Accessibility(A11y): WAI-ARIA Attributes</a> was originally published in <a href=\"https://levelup.gitconnected.com/\">Level Up Coding</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n","content":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*_KSmc9U3Ql0kj5N9LmbAag.png\"></figure><h3>Introduction</h3>\n<p>In the <a href=\"https://medium.com/@harshkurra21/web-accessibility-a11y-right-to-web-content-equality-951bfd2ebdfb?sk=ba953c8f0c32329640bdbdc980d25cc7\">previous story</a>, we learned about the importance of web accessibility and how we can achieve that using standard HTML, CSS, and JS. We have learned that <strong>WAI-ARIA </strong>defines a set of additional <strong>HTML</strong> attributes that can be applied to elements to provide additional semantics and improve openness wherever it is lacking for Assistive technologies(using OS APIs).</p>\n<p>From an <strong>HTML</strong> angle, <strong>WAI-ARIA </strong>provides extra attributes applicable to all HTML elements. An important point about <strong>WAI-ARIA</strong> <strong>attributes</strong> is that they don’t affect anything on the web page, except for the information exposed by the browser’s accessibility APIs</p>\n<p>In the previous story, we have also learned that Accessibility does not just mean “blind users with screen readers”, but sighted keyboard users, users with colour blindness/deficiencies, deaf/hard of hearing users, users with cognitive disabilities. however, ARIA is (almost) exclusively about<strong> how to ensure that web content is correctly conveyed to assistive technologies</strong> (screen readers, screen magnifiers with screen reading capability, etc)</p>\n<h3><strong>Assistive technologies</strong></h3>\n<p>Software or Applications which help the differently-abled people to use web/other applications like a normal user are Assistive technologies.</p>\n<ul>\n<li>JAWS</li>\n<li>ZoomText</li>\n<li>NVDA (free)</li>\n<li>VoiceOver (free)</li>\n<li>TalkBack (free)</li>\n<li>\n<a href=\"http://chromevox.com/\">ChromeVox</a> extension</li>\n</ul>\n<p>All these tools and application depends on OS-specific APIs for Accessibility and they help the differently-abled people to use web application like a normal user</p>\n<p>Web-based Assistive technologies depend on <strong>WAI-ARIA </strong>attributes and semantically correct HTML Elements to work seamlessly for a differently-abled person, basically, they act as bridge b/w OS Accessibility API and <strong>WAI-ARIA </strong>attributes instructions.</p>\n<h3>WAI-ARIA Categories</h3>\n<p>There are three main features/categories defined in the spec for these WAI-ARIA attributes:</p>\n<ul><li>\n<strong>Roles: </strong>it defines what an element is or does. it provides only one attribute which is <strong>ROLE</strong>, such as role=\"banner\", role=\"search\", role=\"tabgroup\", role=\"tab\" for a complete list of the role, visit <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques\">MDN reference here</a>. Each role further has different <strong>WAI-ARIA attribute </strong>applicable to that particular role eg aria-pressed wai-aria attribute will be available to use when you specify button role on your element. (Roles are categorized as <strong>Abstract Roles, Widget Roles, Document Structure Roles, Landmark Roles, Live Region Roles, Window Roles. </strong>Please find their details in above MDN reference)</li></ul>\n<a href=\"https://medium.com/media/2271da0ebcfb911286f3c5e69e04ca4d/href\">https://medium.com/media/2271da0ebcfb911286f3c5e69e04ca4d/href</a><ul><li>\n<strong>Properties: </strong>These define the properties of elements, which can be used to give them extra meaning or semantics. As an example, aria-required=\"true\" specifies that a form of input needs to be filled in to be valid.</li></ul>\n<a href=\"https://medium.com/media/9a8d4aced19b6d1f54f6b26be3fe3633/href\">https://medium.com/media/9a8d4aced19b6d1f54f6b26be3fe3633/href</a><ul><li>\n<strong>States: </strong>Special attributes that define the current conditions of elements, such as aria-disabled=\"true\"</li></ul>\n<a href=\"https://medium.com/media/2edaf7291a68f161c2561df70ada149a/href\">https://medium.com/media/2edaf7291a68f161c2561df70ada149a/href</a><h3><strong>When should you use WAI-ARIA?</strong></h3>\n<p>We talked about custom button problems in the <a href=\"https://medium.com/@harshkurra21/web-accessibility-a11y-right-to-web-content-equality-951bfd2ebdfb?sk=ba953c8f0c32329640bdbdc980d25cc7\">previous story</a> that prompted<strong> WAI-ARIA</strong> to be created earlier on</p>\n<a href=\"https://medium.com/media/d350a05d9db4fa1d1cc337cc738320d1/href\">https://medium.com/media/d350a05d9db4fa1d1cc337cc738320d1/href</a><p>Essentially, there are four main areas that WAI-ARIA is useful in:</p>\n<ul>\n<li>\n<strong>Landmarks: </strong>To specify the landmark/section on your web page<strong> using </strong>role attribute eg. specify <strong><em>search</em></strong> <em>role</em> to search section as we have seen above</li>\n<li>\n<strong>live-updates: </strong>static text can be easily accessed by screenreader but modern web page load most of the content dynamically and <strong><em>aria-live </em></strong>attribute helps us to specify the accessibility of area whose content will load dynamically into DOM using web APIs. Applying this attribute to an element causes screenreaders to read out the content that is updated, How urgently the content is read out depends on the attribute value:</li>\n<li>polite: Updates should be announced only if the user is idle.</li>\n<li>assertive: Updates should be announced to the user as soon as possible.</li>\n<li>off: The default. Updates should not be announced.</li>\n</ul>\n<p>Below is the sample code to understand how aria-live can be helpful for the screen reader to read the dynamically available content.</p>\n<a href=\"https://medium.com/media/85e504129e0a3443be042d660a797856/href\">https://medium.com/media/85e504129e0a3443be042d660a797856/href</a><a href=\"https://medium.com/media/970e395971bd9cbf3014059aae75a573/href\">https://medium.com/media/970e395971bd9cbf3014059aae75a573/href</a><a href=\"https://medium.com/media/d3ae231893c1b1c64167d6281b688c7a/href\">https://medium.com/media/d3ae231893c1b1c64167d6281b688c7a/href</a><p><strong>keyboard accessibility: </strong>As discussed in a few other places in this article, one of the key strengths of <strong>HTML</strong> with respect to accessibility is the built-in keyboard accessibility(<strong>tabbable</strong>) for an element like Button, but for complex controls, this will not be available by default but to make them keyboard accessible(particularly using the tab key to move between controls), WAI-ARIA extends the tabindex attribute with some new values:</p>\n<ul>\n<li>tabindex=\"-1\" — this allows not normally tabbable elements to receive focus programmatically, e.g. via JavaScript, or as the target of links.<br><strong>non-semantic controls</strong>\n</li>\n<li>tabindex=\"0\" — this value allows elements that are not normally <strong>tabbable</strong> to become <strong>tabbable</strong>. This is the most useful value of tabindex.</li>\n</ul>\n<h3>What ARIA doesn’t do…</h3>\n<p>ARIA is <strong>not magic</strong>: it only changes how <strong>assistive technology</strong> interprets content. specifically, <strong>ARIA does not</strong>:</p>\n<ul>\n<li>make an element focusable</li>\n<li>provide appropriate keyboard bindings</li>\n<li>change browser behaviour</li>\n<li>automatically maintain/update properties</li>\n<li>change visible appearance</li>\n</ul>\n<p>all of this is still your responsibility…</p>\n<blockquote>No ARIA is better than bad ARIA</blockquote>\n<ul>\n<li>ARIA roles/attributes are a “promise” to users / assistive technologies (e.g. “this component is actually a button…”) — you must ensure that it then behaves correctly</li>\n<li>if you’re not sure how to represent a particular complex widget or control, don’t just throw ARIA roles and attributes at your markup — you’re more likely to make things worse / more confusing / non-functional for assistive technology users</li>\n</ul>\n<h4>List of Popular/Important ARIA Attribute</h4>\n<ul>\n<li>aria-required</li>\n<li>role</li>\n<li>aria-label</li>\n<li><a href=\"https://www.w3.org/TR/wai-aria-1.1/#aria-labelledby\">aria-labelledby</a></li>\n<li><a href=\"https://www.w3.org/TR/wai-aria-1.1/#aria-disabled\">aria-disabled</a></li>\n<li>\n<a href=\"https://www.w3.org/TR/wai-aria-1.1/#aria-selected\">aria-selected</a> : tab selection</li>\n<li>aria-hidden</li>\n<li>aria-checked</li>\n<li>aria-expanded</li>\n<li>aria-setsize</li>\n<li>aria-posinset</li>\n</ul>\n<p>Complete list of all properties and state-based ARIA attribute can be found <a href=\"https://www.w3.org/TR/wai-aria-1.1/#state_prop_def\">here</a></p>\n<h3>Tools</h3>\n<p>There are a number of tools available to test the accessibility in your web application or website. W3.org has listed all <a href=\"https://www.w3.org/WAI/ER/tools/\">Accessibility evaluation tools Here</a>, I have not tried all of them but checked a few of them and also found some of them are outdated.<br>I personally using</p>\n<ul>\n<li>\n<a href=\"https://chrome.google.com/webstore/detail/chromevox-classic-extensi/kgejglhpjiefppelpmljglcjbhoiplfn?hl=en\">ChromeVox Classic extension</a> to test screen reader based accessibility for my application</li>\n<li>VoiceOver screen reader available on mac by default</li>\n<li>Also using <a href=\"https://github.com/Muhnad/a11y-checker\">a11y-checker </a>open-source automated tool to test accessibility issues in HTML markup. I have found this in w3.org listing. this is quite good and support all modern <a href=\"https://9yly237pkr.codesandbox.io/\">front-end framework like React</a>.</li>\n<li>There are extension and plugins available for all major Text editor starting from VSCode(I have not tried anyone as of now)</li>\n<li>All major browsers support Accessible Tab/Pane to view <strong>accessibility tree</strong>, <strong>ARIA attributes</strong>, and <strong>computed accessibility properties of DOM nodes</strong>.</li>\n</ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*uADYQgdK7F1DCl2DwAzhPw.png\"><figcaption>Screen-shot from Chrome Accessibility-Pane</figcaption></figure><ul><li>From Chrome V84 onwards Accessibility info of element also available as a tooltip on hovering element in inspect mode</li></ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*1GOxwYkYtbMSGMKlk02D8w.png\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/926/1*5KpAQwdow3QiL86Y3oBFNQ.png\"></figure><ul><li>Use Chrome Audit panel to determine if A page is properly marked up for screen readers.(<a href=\"https://developers.google.com/web/tools/chrome-devtools/accessibility/reference\">Chrome Accessibility testing Reference</a> )</li></ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*a_rN3WU26SIGU8kKAHXbIQ.png\"></figure><ul><li>Other people are also incorporating <a href=\"https://github.com/dequelabs/axe-cli\">aXe</a> or <a href=\"https://github.com/pa11y/pa11y\">pa11y</a> into their build steps</li></ul>\n<p>If you have better tools or toolchain then you can share the same in the comment section.</p>\n<h3>The accessibility tree</h3>\n<p><a href=\"https://developers.google.com/web/fundamentals/accessibility/semantics-builtin/the-accessibility-tree\">The accessibility tree</a> is a subset of the DOM tree. It only contains elements from the DOM tree that are relevant and useful for displaying the page’s contents in a screen reader or Assistive Technologies.</p>\n<h3>Conclusion</h3>\n<p>Like the previous story, this story is based on my learning experience from different resources over the internet mostly from MDN.</p>\n<p>In this story, I have tried my best to provide the usage details of WAI-ARIA Attributes and How they help the Assistive technologies based Application like screen-reader to provide web content accessibility to differently-abled people.</p>\n<p>In some section, I have provided a detailed reference of MDN resources, I would prefer to go through them. I will try to provide a detailed case-study on “Enabling Asseccabilty in complex widgets like Calendar &amp; ProgressBar ” in future till then <strong>Stay Safe! </strong>and don't forget to provide the feedback in the comment section.</p>\n<p><strong>Happy Coding!</strong></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=53d54da8627e\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://levelup.gitconnected.com/web-accessibility-a11y-wai-aria-attributes-53d54da8627e\">Web Accessibility(A11y): WAI-ARIA Attributes</a> was originally published in <a href=\"https://levelup.gitconnected.com/\">Level Up Coding</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n","enclosure":{},"categories":["web-accessibility-a11y","seo","wai-aria","web-accessibility","web-development"]},{"title":"Web Accessibility(A11y): Right to Web-Content Equality","pubDate":"2020-08-04 09:18:58","link":"https://medium.com/swlh/web-accessibility-a11y-right-to-web-content-equality-951bfd2ebdfb?source=rss-9e09aaed77b0------2","guid":"https://medium.com/p/951bfd2ebdfb","author":"Harsh Kurra","thumbnail":"https://cdn-images-1.medium.com/max/2600/0*1AREUYxYuitysbtG","description":"<div class=\"medium-feed-item\">\n<p class=\"medium-feed-image\"><a href=\"https://medium.com/swlh/web-accessibility-a11y-right-to-web-content-equality-951bfd2ebdfb?source=rss-9e09aaed77b0------2\"><img src=\"https://cdn-images-1.medium.com/max/2600/0*1AREUYxYuitysbtG\" width=\"5616\"></a></p>\n<p class=\"medium-feed-snippet\">This story will give you quick insight on Web Accessibility(A11y) and provide you with the big picture of Web Accessibility</p>\n<p class=\"medium-feed-link\"><a href=\"https://medium.com/swlh/web-accessibility-a11y-right-to-web-content-equality-951bfd2ebdfb?source=rss-9e09aaed77b0------2\">Continue reading on The Startup »</a></p>\n</div>","content":"<div class=\"medium-feed-item\">\n<p class=\"medium-feed-image\"><a href=\"https://medium.com/swlh/web-accessibility-a11y-right-to-web-content-equality-951bfd2ebdfb?source=rss-9e09aaed77b0------2\"><img src=\"https://cdn-images-1.medium.com/max/2600/0*1AREUYxYuitysbtG\" width=\"5616\"></a></p>\n<p class=\"medium-feed-snippet\">This story will give you quick insight on Web Accessibility(A11y) and provide you with the big picture of Web Accessibility</p>\n<p class=\"medium-feed-link\"><a href=\"https://medium.com/swlh/web-accessibility-a11y-right-to-web-content-equality-951bfd2ebdfb?source=rss-9e09aaed77b0------2\">Continue reading on The Startup »</a></p>\n</div>","enclosure":{},"categories":["web-accessibility-a11y","web-accessibility","web-development","seo"]},{"title":"Review: Transcend JetDrive Lite 360 for Macbook Pro","pubDate":"2020-06-03 11:59:23","link":"https://medium.com/macoclock/review-transcend-jetdrive-lite-360-for-macbook-pro-9d589ec919be?source=rss-9e09aaed77b0------2","guid":"https://medium.com/p/9d589ec919be","author":"Harsh Kurra","thumbnail":"https://cdn-images-1.medium.com/max/1024/1*q8fsFF_i00TozpLto52B5A.jpeg","description":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*q8fsFF_i00TozpLto52B5A.jpeg\"></figure><p>Recently, my sister brought me the 250GB Transcend JetDrive from the USA for my MacBook Pro (Retina, 15-inch, Mid 2015). My current SSD has only 250 Gb of storage which is enough for System Applications along with my professional Software Development but I can not keep oversized File format particularly media files like Video, Images etc. Being a Cross-platform developer I also need to switch to multiple platforms to verify my development on a different platform, for that, I also need to keep Windows and Linux Virtual machines set up on my machine. A single VM requires at least 50 GB so I can not afford it with limited 250 Gb from internal SSD.</p>\n<p>I needed to expand my disk Capacity at any cost, My Macbook pro model does not officially support some way to extend the disk capacity so I have to decide b/w external SSD and Transcend JetDrive. I choose Transcend JetDrive because of its small, compact, hidden, and always available or attached media disk Nature.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/679/1*gRg7UZC_2TkxtQzLBEY6_A.jpeg\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/679/1*Fc7b32yXmt2Nd8CBcWbWPA.jpeg\"><figcaption>JetDrive Lite 360 won’t stick out like a normal memory card or external SSDs(Photo Credit Amazon.com)</figcaption></figure><p>I know its Read/Write speed nowhere close to the SSD but Transcend claiming it be 90 &amp; 60 MB/s for reading and writing, which is close to 5400 RPM HDD. I know in the real scenario, I will be getting only 60% of what they are claiming, but I am fine with that and below is the real speed I am getting on my device, benchmarked through <a href=\"https://apps.apple.com/us/app/blackmagic-disk-speed-test/id425264550?mt=12\">Blackmagic Disk Speed Test</a>. This is like 90% of what Transcend is claiming. It is good enough for most of the media files.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*_W7UXegOpG0ZBfihAeMbnQ.png\"><figcaption>Speed test benchmarked through BlackMagic Disk speed test</figcaption></figure><h3>Installations Problem</h3>\n<p>I was so excited when I get hands on it, I put it directly in the Memory card Slot available in my MacBook pro. I open finder app to see it in file explorer but I did not find it so, I restart my system to make it detectable by the system.</p>\n<p>Here is the first problem I faced, My system giving me MacOs boot tone after every few seconds continuously without showing any start-up screen or loading bar, so my system was not able to boot up, I pressed the start button for hard shutdown, waited for few seconds and started it again, now it works like expected and system also working like normal, I have also copied few media files in the card but after few minutes of usage, my system start showing complete black screen although songs were playing normally in the background.</p>\n<p>I made the hard shut-down and restarted it, again after few minutes I faced this problem for like 5–6 time finally, I removed the card and started my system it is working normally, a sign of relief but with a disappointment of the card did not work. After 20 minutes of usage, it again starts showing a black screen and it was really a disappointment.</p>\n<p>I searched the internet for the specific driver I need to install to make it work, I found there is a jet <a href=\"https://www.transcend-info.com/Support/Software-181\">drive-Toolbox</a> software provided by Transcend, I installed it and also enabled the power save mode setting assuming it will not put the system in sleep mode to avoid black screen, still, I was facing the same issue.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*kOT2f9Ql5mp_aTSieCcJcg.png\"></figure><p>After researching a lot and contacting customer care, I found I need to <a href=\"https://osxdaily.com/2017/04/02/fix-black-screen-wake-sleep-mac/\">clear the NVRAM</a>, space which holds booting information like drive to boot, a system resolution to pick, sound to play during bootup etc.</p>\n<h4>Steps to clear the NVRAM on MacBook pro</h4>\n<ol>\n<li>Turn off the Mac</li>\n<li>Next, reboot the Mac again and this time hold down Command+Option+P+R keys concurrently for about 20 seconds, this resets the NVRAM</li>\n</ol>\n<p>After Clearing NVRAM, it did well but again I faced the black screen issue after 1–2 hours of usage, I cleared the NVRAM multiple times both with Card and Without the card, but I faced this issues multiple times.</p>\n<p>At the time of installation, I was on macOS V10.14.2, Update to 10.14.6 was pending at the time of card installation, in hope of fixing this issue on latest OS, I have also updated to the latest version, even after the update I have faced the similar problem</p>\n<p>Finally, I start using the card with the black-screen problem because now this is less consistent and I was clearing NVRAM on each restart or system start. After a few days, it is working normally and I have never faced this problem from last 2–3 months so, not sure what could be the cause at my end. For you, I would recommend installing the JetDrive Toolbox first before inserting the card in your system.</p>\n<h3>Conclusion</h3>\n<p>After 4 months of usage, I will rate it 4 stars out of 5, I deduct one star only because of the black-screen problem I faced, I have also installed the Virtual box based Windows and Ubuntu OS on this card and they are working like charm without any major performance issue, obviously, these VMs are not my primary development machine but giving good performance required for cross-platform verification only.</p>\n<p>Overall - Rating : ⭐ ⭐ ⭐ ⭐</p>\n<p>Performance : ⭐ ⭐ ⭐ ⭐ ⭐</p>\n<p>Installation: ⭐ ⭐</p>\n<p>Pricing: 💵 💵 💵 💵</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=9d589ec919be\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/macoclock/review-transcend-jetdrive-lite-360-for-macbook-pro-9d589ec919be\">Review: Transcend JetDrive Lite 360 for Macbook Pro</a> was originally published in <a href=\"https://medium.com/macoclock\">Mac O’Clock</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n","content":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*q8fsFF_i00TozpLto52B5A.jpeg\"></figure><p>Recently, my sister brought me the 250GB Transcend JetDrive from the USA for my MacBook Pro (Retina, 15-inch, Mid 2015). My current SSD has only 250 Gb of storage which is enough for System Applications along with my professional Software Development but I can not keep oversized File format particularly media files like Video, Images etc. Being a Cross-platform developer I also need to switch to multiple platforms to verify my development on a different platform, for that, I also need to keep Windows and Linux Virtual machines set up on my machine. A single VM requires at least 50 GB so I can not afford it with limited 250 Gb from internal SSD.</p>\n<p>I needed to expand my disk Capacity at any cost, My Macbook pro model does not officially support some way to extend the disk capacity so I have to decide b/w external SSD and Transcend JetDrive. I choose Transcend JetDrive because of its small, compact, hidden, and always available or attached media disk Nature.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/679/1*gRg7UZC_2TkxtQzLBEY6_A.jpeg\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/679/1*Fc7b32yXmt2Nd8CBcWbWPA.jpeg\"><figcaption>JetDrive Lite 360 won’t stick out like a normal memory card or external SSDs(Photo Credit Amazon.com)</figcaption></figure><p>I know its Read/Write speed nowhere close to the SSD but Transcend claiming it be 90 &amp; 60 MB/s for reading and writing, which is close to 5400 RPM HDD. I know in the real scenario, I will be getting only 60% of what they are claiming, but I am fine with that and below is the real speed I am getting on my device, benchmarked through <a href=\"https://apps.apple.com/us/app/blackmagic-disk-speed-test/id425264550?mt=12\">Blackmagic Disk Speed Test</a>. This is like 90% of what Transcend is claiming. It is good enough for most of the media files.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*_W7UXegOpG0ZBfihAeMbnQ.png\"><figcaption>Speed test benchmarked through BlackMagic Disk speed test</figcaption></figure><h3>Installations Problem</h3>\n<p>I was so excited when I get hands on it, I put it directly in the Memory card Slot available in my MacBook pro. I open finder app to see it in file explorer but I did not find it so, I restart my system to make it detectable by the system.</p>\n<p>Here is the first problem I faced, My system giving me MacOs boot tone after every few seconds continuously without showing any start-up screen or loading bar, so my system was not able to boot up, I pressed the start button for hard shutdown, waited for few seconds and started it again, now it works like expected and system also working like normal, I have also copied few media files in the card but after few minutes of usage, my system start showing complete black screen although songs were playing normally in the background.</p>\n<p>I made the hard shut-down and restarted it, again after few minutes I faced this problem for like 5–6 time finally, I removed the card and started my system it is working normally, a sign of relief but with a disappointment of the card did not work. After 20 minutes of usage, it again starts showing a black screen and it was really a disappointment.</p>\n<p>I searched the internet for the specific driver I need to install to make it work, I found there is a jet <a href=\"https://www.transcend-info.com/Support/Software-181\">drive-Toolbox</a> software provided by Transcend, I installed it and also enabled the power save mode setting assuming it will not put the system in sleep mode to avoid black screen, still, I was facing the same issue.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*kOT2f9Ql5mp_aTSieCcJcg.png\"></figure><p>After researching a lot and contacting customer care, I found I need to <a href=\"https://osxdaily.com/2017/04/02/fix-black-screen-wake-sleep-mac/\">clear the NVRAM</a>, space which holds booting information like drive to boot, a system resolution to pick, sound to play during bootup etc.</p>\n<h4>Steps to clear the NVRAM on MacBook pro</h4>\n<ol>\n<li>Turn off the Mac</li>\n<li>Next, reboot the Mac again and this time hold down Command+Option+P+R keys concurrently for about 20 seconds, this resets the NVRAM</li>\n</ol>\n<p>After Clearing NVRAM, it did well but again I faced the black screen issue after 1–2 hours of usage, I cleared the NVRAM multiple times both with Card and Without the card, but I faced this issues multiple times.</p>\n<p>At the time of installation, I was on macOS V10.14.2, Update to 10.14.6 was pending at the time of card installation, in hope of fixing this issue on latest OS, I have also updated to the latest version, even after the update I have faced the similar problem</p>\n<p>Finally, I start using the card with the black-screen problem because now this is less consistent and I was clearing NVRAM on each restart or system start. After a few days, it is working normally and I have never faced this problem from last 2–3 months so, not sure what could be the cause at my end. For you, I would recommend installing the JetDrive Toolbox first before inserting the card in your system.</p>\n<h3>Conclusion</h3>\n<p>After 4 months of usage, I will rate it 4 stars out of 5, I deduct one star only because of the black-screen problem I faced, I have also installed the Virtual box based Windows and Ubuntu OS on this card and they are working like charm without any major performance issue, obviously, these VMs are not my primary development machine but giving good performance required for cross-platform verification only.</p>\n<p>Overall - Rating : ⭐ ⭐ ⭐ ⭐</p>\n<p>Performance : ⭐ ⭐ ⭐ ⭐ ⭐</p>\n<p>Installation: ⭐ ⭐</p>\n<p>Pricing: 💵 💵 💵 💵</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=9d589ec919be\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/macoclock/review-transcend-jetdrive-lite-360-for-macbook-pro-9d589ec919be\">Review: Transcend JetDrive Lite 360 for Macbook Pro</a> was originally published in <a href=\"https://medium.com/macoclock\">Mac O’Clock</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n","enclosure":{},"categories":["jetdrive","external-hard-drive","review","macbook-pro","macos"]},{"title":"Build an On-hover Custom Scrollbar in React","pubDate":"2020-04-27 08:19:31","link":"https://levelup.gitconnected.com/build-on-hover-custom-scrollbar-in-react-d846194a7ea4?source=rss-9e09aaed77b0------2","guid":"https://medium.com/p/d846194a7ea4","author":"Harsh Kurra","thumbnail":"https://cdn-images-1.medium.com/max/1024/0*eL42Gt7K-YeKWSWc","description":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*eL42Gt7K-YeKWSWc\"><figcaption>Photo by <a href=\"https://unsplash.com/@shagal_sajid?utm_source=medium&amp;utm_medium=referral\">Shagal Sajid</a> on <a href=\"https://unsplash.com/?utm_source=medium&amp;utm_medium=referral\">Unsplash</a></figcaption></figure><p>We all know the scroll bar is a UI component which commonly located on the far right or bottom of a window that allows you to move the window viewing area up, down, left, or right. Most people today are familiar with <strong>scroll bars</strong> because of the need to scroll up and down on almost every web page and application.</p>\n<h3>\n<strong>Problems</strong> with the scrollbar in web-application</h3>\n<ul>\n<li>All operating systems have a different type of Native Scrollbars and most browsers inherit OS-specific scrollbar, which makes your web-application Scrollbar’s look &amp; feel different on different OS. Web-kit based browsers support <a href=\"https://css-tricks.com/custom-scrollbars-in-webkit/\">scrollbar UI customization </a>through CSS but what about others?</li>\n<li>They take some extra space horizontally or vertically which reduce the available space for your web page content or your content container like a table(WebKit based browsers provides an <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/overflow\">overlay</a> value make scrollbar to draw on top of content to get rid of these extra space but again what about other browsers?)</li>\n</ul>\n<h3><strong>Motivation</strong></h3>\n<figure><img alt=\"Custom scroll-bar in Facebook Messanger pop-up\" src=\"https://cdn-images-1.medium.com/max/428/1*eu5fGYBev9EUZV4hKvFB_w.gif\"><figcaption>Facebook Messenger Custom Scrollbar</figcaption></figure><ul>\n<li>\n<strong>Facebook</strong>: I have found a custom scrollbar in Facebook messenger pop-up, which appears on hovering.</li>\n<li>\n<strong>Gmail:</strong> You can also notice similar scrollbar in Gmail below the Email compose button on hovering</li>\n<li>You might have noticed similar Scroll bar in other Applications even in ‘Code sandbox’ project you can notice similar scrollbar</li>\n</ul>\n<p>In this story, I will walk you through the steps on how to create the custom scrollbar in React, we can use the same technique in other Front-end Frameworks like Angular but before taking a deep dive, let's visualize the different components of a scroll-bar</p>\n<figure><img alt=\"Different component of Scroll-bar and other related terms\" src=\"https://cdn-images-1.medium.com/max/1024/1*vCRRPEIw8_UjvscGz_vPHQ.png\"><figcaption>Scroll-bar Components</figcaption></figure><p><a href=\"https://github.com/hkurra/react-on-hover-scrollbar\">hkurra/react-on-hover-scrollbar</a></p>\n<p>Complete Code-Sand-box project <a href=\"https://codesandbox.io/s/github/hkurra/react-on-hover-scrollbar/tree/master/\">Link</a></p>\n<h4>Steps we need to perform</h4>\n<ol>\n<li>Hide Browser’s Native Scroll-bar</li>\n<li>Add Custom <strong>Scroll-Bar</strong> UI, this will be visible on mouse hover</li>\n<li>Add Custom <strong>scroll-thumb</strong> in scroll-bar</li>\n<li>Calculate <strong>scroll-thumb</strong> <strong><em>Height</em></strong> based on scrollable content</li>\n<li>Change <strong>scroll-thumb <em>position</em></strong> on mouse scroll in scroll-host</li>\n<li>Change <strong>scroll-thumb</strong> <strong><em>position</em></strong> on mouse drag</li>\n</ol>\n<p>All these steps have explained below in great depth</p>\n<h3>Hide Native Scroll-bar</h3>\n<p>First things we need to do is to Hide the native scroll-bar of the browser on the scroll-host element, don't disable the scrolling through <strong><em>overflow: hidden</em></strong></p>\n<blockquote>Why? we will see the reason soon.</blockquote>\n<p>Below is the CSS to hide the scroll-bar on different browsers. <a href=\"https://9bmr3.csb.app/\">Here</a> is the link of code sandbox project where I have used the below CSS to hide scroll-bar on my scroll-host container</p>\n<a href=\"https://medium.com/media/9b0f37667eeaf93e27d8d4b377ee4c5d/href\">https://medium.com/media/9b0f37667eeaf93e27d8d4b377ee4c5d/href</a><p>So, we get-rid off the Browser Native scroll-bar through the above steps. Before moving to the next steps, I have created a <a href=\"https://codesandbox.io/s/hide-scroll-bar-ps471?file=/src/onHover.js\">Code Sandbox Project</a>, which has a complete implementation. Users with an intermediate or higher level of experience can directly move there to understand the logic directly from the code. Although, I would recommend reading through the article to understand everything in detail.</p>\n<h3>Let's create our custom scrollbar</h3>\n<p>Next step is to render a <strong>Scroll-bar</strong> and <strong>Scroll-box thumb</strong> over our scroll-host which will help us to scroll the content through mouse drag. First, we will add a scroll-bar that will appear on hovering. Below is the code snippet along with its CSS.</p>\n<a href=\"https://medium.com/media/e57b0261e3dea525b88ca91517df7a03/href\">https://medium.com/media/e57b0261e3dea525b88ca91517df7a03/href</a><a href=\"https://medium.com/media/e20b51b4965ae6453d7ee85f66d4231d/href\">https://medium.com/media/e20b51b4965ae6453d7ee85f66d4231d/href</a><p>So, now we have separate reusable component name <strong>CustomScrollDiv</strong>, which is rendering your content in it along with <strong>scroll-bar</strong>, and this scroll-bar will be visible only when the user is hovering your <strong>CustomScrollDiv</strong> component.</p>\n<h4>Render</h4>\n<ul>\n<li>\n<strong>Scroll-host</strong>: it represents your custom <strong>div</strong> container which will render custom scroll-bar on hover, it is going to hold scrollable content(at line <strong>25</strong> it is rendering <strong>children</strong> props), any props you will provide to <strong>CustomScrollDiv </strong>will get applied on this div. Refer to <strong>line 23</strong>\n</li>\n<li>\n<strong>Scroll-bar</strong>: This is going to hold the scroll-thumb and provide a tracking area for scroll-thumb. In the later section, we will add scroll-thumb in this component. Here, we are leveraging the <strong>absolute</strong> positioning CSS property to render the scrollbar container over our <strong>scroll-host</strong> at the fixed position keeping its height equal to 100% of <strong>Scroll-host-container.</strong>\n</li>\n<li>\n<strong>Scroll-host-container</strong>: It is a container/wrapper of your actual component aka <strong>scroll-host</strong>. Being a container, It is listening <strong>mouse over</strong> and <strong>mouse out</strong> event(<strong>line 17, 18</strong>) instead of <strong>scroll-host</strong>.</li>\n</ul>\n<blockquote>why do we need this?</blockquote>\n<blockquote>This will help us to keep the scroll-bar height equal to the client height of <strong>scroll-host, </strong>without this you have to keep the height of <strong>scroll-bar</strong> equal to <strong>scrollHeight</strong> of <strong>scroll-host</strong> which will cause a flickering issue when you have very large scrollHeight(I will explain this in the last section)</blockquote>\n<h4><strong>State</strong></h4>\n<p>For now, we are keeping only a single state i.e. <strong>hovering</strong>,</p>\n<p>we are changing its value under <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseout_event\"><strong>mouseout</strong></a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseover_event\"><strong>mouseover</strong></a> event handler registered on <strong>Scroll-host-container. A</strong>s we move forward, we will add more states</p>\n<p>Now with above component and CSS in place, you will notice that <strong>scroll-bar</strong> is visible on hovering and your content is still scrollable</p>\n<figure><img alt=\"Custom Scroll-bar visible on mouse hover scroll-host\" src=\"https://cdn-images-1.medium.com/max/600/1*HeiVhdkTTG3ZBcsTRJzh9Q.gif\"><figcaption>Custom Scroll-bar visible on mouse hover scroll-host</figcaption></figure><blockquote>Do you know why your content is still scrollable?</blockquote>\n<p>To hide the scroll-bar we <strong>did not </strong>use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/overflow\"><strong>overflow: hidden</strong></a><strong>, which does two things to scrolling</strong></p>\n<ol>\n<li>\n<strong>Hides </strong>the scrollbars</li>\n<li>Disallows the user to scroll the content</li>\n</ol>\n<p>With this, you have also got the answer to the above question.</p>\n<h3>Let's hold the scroll bar, Scroll-Thumb it is</h3>\n<p>Our next step is to render the <strong>Scroll-thumb (box)</strong> or <strong>scroll-holder</strong>, through which a user can not only scroll the content through mouse dragging but it helps the user to identify the length of scrollable content with its positioning relative to <strong>scroll-bar</strong>. This is the most critical/complex part of this implementation. So, be attentive else first have a cup of coffee/tea 🍮 😉.</p>\n<h4>Scroll-thumb Rendering</h4>\n<p>First, we will add a new <strong>div</strong> element inside<strong> scroll-bar</strong> representing <strong>scroll-thumb</strong></p>\n<a href=\"https://medium.com/media/f0142b314674e0919ebfa9d12266e5c8/href\">https://medium.com/media/f0142b314674e0919ebfa9d12266e5c8/href</a><h4><strong>Scroll-thumb height calculation</strong></h4>\n<ul>\n<li>Next, we have to find the height of this scroll-thumb based on the scrollable content, its time to refresh the basic mathematic percentage formula.</li>\n<li>Don't take much stress its a simple math. Before moving to the formula, let's understand the below terminology</li>\n</ul>\n<blockquote>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight\"><strong>clientHeight</strong></a> : it’s the inner height of an element</blockquote>\n<blockquote>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight\"><strong>scrollHeight</strong></a><strong>:</strong> it’s the<strong> </strong>height of an element’s <strong>content</strong>\n</blockquote>\n<ul><li>Now, here is the formula where the height of RHV of scroll host or area which is scrollable</li></ul>\n<blockquote><strong><em>scrollThumbHeight = (clientHeight/scrollHeight) * clientHeight</em></strong></blockquote>\n<a href=\"https://medium.com/media/7269aabe0dc3c2c95c3ec82517dd8aa2/href\">https://medium.com/media/7269aabe0dc3c2c95c3ec82517dd8aa2/href</a><ul>\n<li>Set the minimum height of 20 px of scroll-box to avoid the negative height of the scroll box in case of very big scrollable content.</li>\n<li>In React, we will calculate this height just after our <strong>CustomScrollDiv</strong> element gets mounted in DOM, you can use the <strong>componentDidMount</strong> lifecycle method in case of the class-based component or <strong>useEffect</strong> hooks for a functional component.</li>\n</ul>\n<h4>Scroll-thumb positioning</h4>\n<ul><li>In order to change the position of above <strong>scroll-thumb </strong>on mouse-scrolling, we need to <strong>follow below steps<br>1. </strong>handle the <strong><em>scroll</em></strong> event on <strong>scroll-host<br>2. </strong>Change the <em>top</em> position of <strong>scroll-thumb</strong> on every scroll movement in handler registered in step 1 based on the following formula</li></ul>\n<blockquote>scrollThumbTop = (scrollTop/scrollHeight) * clientHeight</blockquote>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/600/1*GmoJ8KReZQNK7t3wphKRSA.gif\"><figcaption>Scroll-thumb moving on mouse scroll</figcaption></figure><ul><li>after this change, <strong>CustomScrollDiv</strong> component will look like this</li></ul>\n<a href=\"https://medium.com/media/1cf3459f5e346aacf0ea5099536b58d5/href\">https://medium.com/media/1cf3459f5e346aacf0ea5099536b58d5/href</a><h4>Scroll-Thumb dragging</h4>\n<ul>\n<li>Now, we have <strong>scroll-bar and scroll-thumb</strong> of the correct size and they are also moving correctly on mouse scroll in the scroll-host area. Still, mouse dragging on <strong>scroll-thumb</strong> is not working, let’s see how can we handle that:</li>\n<li>To handle the dragging on scroll-thumb, we need to handle the <br>1. <strong><em>mouseDown</em></strong> event on <strong>Scroll-thumb</strong> element and <br>2. <strong><em>mousemove</em></strong>, <strong><em>mouseup &amp; mouseleave </em></strong>on document</li>\n</ul>\n<blockquote>Why document?</blockquote>\n<blockquote>because while dragging you can move your mouse anywhere in the document, this is the default behaviour in all scroll-bar, you can verify this behaviour by doing scrolling while reading this story</blockquote>\n<ul>\n<li>To identify if a user is dragging scroll-thumb or not, we will keep the state <strong>isDragging </strong>in component and also need to store the Y coordinate of <strong>Scroll-Thumb</strong> element when a user starts dragging</li>\n<li>Now, let's walk through what we need to do in each event handler</li>\n</ul>\n<h4>First <strong><em>mouseDown </em></strong>Handler<strong><em> on </em>scroll-thumb</strong>\n</h4>\n<p>Mouse down on Scroll-thumb implies, a user going to start dragging through <strong>Scroll-Thumb</strong>, so, we are keeping the current Y coordinate location of <strong>Scroll-Thumb</strong>, and changing <strong>isDragging</strong> state to true</p>\n<a href=\"https://medium.com/media/1afb58654a6d226be777cb014043e061/href\">https://medium.com/media/1afb58654a6d226be777cb014043e061/href</a><h4>Document <strong><em>mouseleave and mouseup event</em></strong>\n</h4>\n<p><strong>mouseLeave</strong> and <strong>mouseUp</strong> event on document signify user going to stop the dragging if it is currently dragging the mouse-thumb, so we are changing <strong>isDragging</strong> state to false</p>\n<a href=\"https://medium.com/media/a7cac0e1644551cbea0c26473868963c/href\">https://medium.com/media/a7cac0e1644551cbea0c26473868963c/href</a><h4>Document <strong>mouseMove Handling</strong>\n</h4>\n<p>To give scrolling effect on dragging, we need to change the scroll-top of the below components:</p>\n<ul>\n<li>\n<strong>Scroll-Thumb:</strong> The change in scroll-top of scroll-thumb is the vertical change in the mouse position during dragging. To calculate that value we need the last <strong>scroll-thumb</strong> position which we have saved in l<strong>astScrollThumbPosition </strong>state. At <strong>line 9(</strong>see below<strong>)</strong> we are getting change in <strong>scroll-thumb</strong> position and in <strong>line 15</strong> we are incrementing <strong>scroll-thumb</strong> top by that value.</li>\n<li>\n<strong>Scroll-Host:</strong> The change in scroll top of scroll-host is calculated using below formula, if you have noticed new scroll-top is the percentage of change in mouse position during dragging.</li>\n</ul>\n<blockquote>newScrollHostTop = (scrollHeight / offsetHeight) * deltaY;</blockquote>\n<p>we are calculating this change in scrollTop at <strong>line 10</strong> and applying this at <strong>line 20</strong></p>\n<a href=\"https://medium.com/media/838050ecec681263c86e7adfa16bd18e/href\">https://medium.com/media/838050ecec681263c86e7adfa16bd18e/href</a><p>Now, we have achieved our goal and our Custom scroll-bar on hovering is ready which is also working on mouse dragging on <strong>Scroll-Thumb</strong>, this is how it will work now.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/600/1*jkiQri7Xc7f5vMPCgLyN4A.gif\"></figure><h3>Conclusion</h3>\n<p>I have tried my best to keep this story easy to understand though, it requires prerequisite like <a href=\"https://reactjs.org/\"><strong>React</strong></a>, <a href=\"https://reactjs.org/docs/hooks-intro.html\"><strong>React-Hooks</strong></a>, <strong>DOM</strong> layout, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model#HTML_DOM\"><strong>JS DoM API</strong></a> etc. Some sections might require extra elaboration but to keep the story concise and understandable for all kind of users I have mentioned only important points. Feel free to ask your doubts and suggestions in the comments section below.</p>\n<p>You are free to use the <a href=\"https://codesandbox.io/s/custom-scrollbar-on-hover-ps471?file=/src/CustomScrollDiv.js:162-177\">CustomScrollDiv</a> Component in your code but for production, you might need to handle extra stuff like, currently, I am calculating <strong>scroll-thumb</strong> height only after component mount, but it can change if a user resizes windows or if your scroll-host load data lazily and change scrollHeight lazily.</p>\n<p>Voila!! Now, we have our own Custom Scroll bar :)</p>\n<p>Stay Safe and Keep coding!!</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=d846194a7ea4\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://levelup.gitconnected.com/build-on-hover-custom-scrollbar-in-react-d846194a7ea4\">Build an On-hover Custom Scrollbar in React</a> was originally published in <a href=\"https://levelup.gitconnected.com/\">Level Up Coding</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n","content":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*eL42Gt7K-YeKWSWc\"><figcaption>Photo by <a href=\"https://unsplash.com/@shagal_sajid?utm_source=medium&amp;utm_medium=referral\">Shagal Sajid</a> on <a href=\"https://unsplash.com/?utm_source=medium&amp;utm_medium=referral\">Unsplash</a></figcaption></figure><p>We all know the scroll bar is a UI component which commonly located on the far right or bottom of a window that allows you to move the window viewing area up, down, left, or right. Most people today are familiar with <strong>scroll bars</strong> because of the need to scroll up and down on almost every web page and application.</p>\n<h3>\n<strong>Problems</strong> with the scrollbar in web-application</h3>\n<ul>\n<li>All operating systems have a different type of Native Scrollbars and most browsers inherit OS-specific scrollbar, which makes your web-application Scrollbar’s look &amp; feel different on different OS. Web-kit based browsers support <a href=\"https://css-tricks.com/custom-scrollbars-in-webkit/\">scrollbar UI customization </a>through CSS but what about others?</li>\n<li>They take some extra space horizontally or vertically which reduce the available space for your web page content or your content container like a table(WebKit based browsers provides an <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/overflow\">overlay</a> value make scrollbar to draw on top of content to get rid of these extra space but again what about other browsers?)</li>\n</ul>\n<h3><strong>Motivation</strong></h3>\n<figure><img alt=\"Custom scroll-bar in Facebook Messanger pop-up\" src=\"https://cdn-images-1.medium.com/max/428/1*eu5fGYBev9EUZV4hKvFB_w.gif\"><figcaption>Facebook Messenger Custom Scrollbar</figcaption></figure><ul>\n<li>\n<strong>Facebook</strong>: I have found a custom scrollbar in Facebook messenger pop-up, which appears on hovering.</li>\n<li>\n<strong>Gmail:</strong> You can also notice similar scrollbar in Gmail below the Email compose button on hovering</li>\n<li>You might have noticed similar Scroll bar in other Applications even in ‘Code sandbox’ project you can notice similar scrollbar</li>\n</ul>\n<p>In this story, I will walk you through the steps on how to create the custom scrollbar in React, we can use the same technique in other Front-end Frameworks like Angular but before taking a deep dive, let's visualize the different components of a scroll-bar</p>\n<figure><img alt=\"Different component of Scroll-bar and other related terms\" src=\"https://cdn-images-1.medium.com/max/1024/1*vCRRPEIw8_UjvscGz_vPHQ.png\"><figcaption>Scroll-bar Components</figcaption></figure><p><a href=\"https://github.com/hkurra/react-on-hover-scrollbar\">hkurra/react-on-hover-scrollbar</a></p>\n<p>Complete Code-Sand-box project <a href=\"https://codesandbox.io/s/github/hkurra/react-on-hover-scrollbar/tree/master/\">Link</a></p>\n<h4>Steps we need to perform</h4>\n<ol>\n<li>Hide Browser’s Native Scroll-bar</li>\n<li>Add Custom <strong>Scroll-Bar</strong> UI, this will be visible on mouse hover</li>\n<li>Add Custom <strong>scroll-thumb</strong> in scroll-bar</li>\n<li>Calculate <strong>scroll-thumb</strong> <strong><em>Height</em></strong> based on scrollable content</li>\n<li>Change <strong>scroll-thumb <em>position</em></strong> on mouse scroll in scroll-host</li>\n<li>Change <strong>scroll-thumb</strong> <strong><em>position</em></strong> on mouse drag</li>\n</ol>\n<p>All these steps have explained below in great depth</p>\n<h3>Hide Native Scroll-bar</h3>\n<p>First things we need to do is to Hide the native scroll-bar of the browser on the scroll-host element, don't disable the scrolling through <strong><em>overflow: hidden</em></strong></p>\n<blockquote>Why? we will see the reason soon.</blockquote>\n<p>Below is the CSS to hide the scroll-bar on different browsers. <a href=\"https://9bmr3.csb.app/\">Here</a> is the link of code sandbox project where I have used the below CSS to hide scroll-bar on my scroll-host container</p>\n<a href=\"https://medium.com/media/9b0f37667eeaf93e27d8d4b377ee4c5d/href\">https://medium.com/media/9b0f37667eeaf93e27d8d4b377ee4c5d/href</a><p>So, we get-rid off the Browser Native scroll-bar through the above steps. Before moving to the next steps, I have created a <a href=\"https://codesandbox.io/s/hide-scroll-bar-ps471?file=/src/onHover.js\">Code Sandbox Project</a>, which has a complete implementation. Users with an intermediate or higher level of experience can directly move there to understand the logic directly from the code. Although, I would recommend reading through the article to understand everything in detail.</p>\n<h3>Let's create our custom scrollbar</h3>\n<p>Next step is to render a <strong>Scroll-bar</strong> and <strong>Scroll-box thumb</strong> over our scroll-host which will help us to scroll the content through mouse drag. First, we will add a scroll-bar that will appear on hovering. Below is the code snippet along with its CSS.</p>\n<a href=\"https://medium.com/media/e57b0261e3dea525b88ca91517df7a03/href\">https://medium.com/media/e57b0261e3dea525b88ca91517df7a03/href</a><a href=\"https://medium.com/media/e20b51b4965ae6453d7ee85f66d4231d/href\">https://medium.com/media/e20b51b4965ae6453d7ee85f66d4231d/href</a><p>So, now we have separate reusable component name <strong>CustomScrollDiv</strong>, which is rendering your content in it along with <strong>scroll-bar</strong>, and this scroll-bar will be visible only when the user is hovering your <strong>CustomScrollDiv</strong> component.</p>\n<h4>Render</h4>\n<ul>\n<li>\n<strong>Scroll-host</strong>: it represents your custom <strong>div</strong> container which will render custom scroll-bar on hover, it is going to hold scrollable content(at line <strong>25</strong> it is rendering <strong>children</strong> props), any props you will provide to <strong>CustomScrollDiv </strong>will get applied on this div. Refer to <strong>line 23</strong>\n</li>\n<li>\n<strong>Scroll-bar</strong>: This is going to hold the scroll-thumb and provide a tracking area for scroll-thumb. In the later section, we will add scroll-thumb in this component. Here, we are leveraging the <strong>absolute</strong> positioning CSS property to render the scrollbar container over our <strong>scroll-host</strong> at the fixed position keeping its height equal to 100% of <strong>Scroll-host-container.</strong>\n</li>\n<li>\n<strong>Scroll-host-container</strong>: It is a container/wrapper of your actual component aka <strong>scroll-host</strong>. Being a container, It is listening <strong>mouse over</strong> and <strong>mouse out</strong> event(<strong>line 17, 18</strong>) instead of <strong>scroll-host</strong>.</li>\n</ul>\n<blockquote>why do we need this?</blockquote>\n<blockquote>This will help us to keep the scroll-bar height equal to the client height of <strong>scroll-host, </strong>without this you have to keep the height of <strong>scroll-bar</strong> equal to <strong>scrollHeight</strong> of <strong>scroll-host</strong> which will cause a flickering issue when you have very large scrollHeight(I will explain this in the last section)</blockquote>\n<h4><strong>State</strong></h4>\n<p>For now, we are keeping only a single state i.e. <strong>hovering</strong>,</p>\n<p>we are changing its value under <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseout_event\"><strong>mouseout</strong></a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseover_event\"><strong>mouseover</strong></a> event handler registered on <strong>Scroll-host-container. A</strong>s we move forward, we will add more states</p>\n<p>Now with above component and CSS in place, you will notice that <strong>scroll-bar</strong> is visible on hovering and your content is still scrollable</p>\n<figure><img alt=\"Custom Scroll-bar visible on mouse hover scroll-host\" src=\"https://cdn-images-1.medium.com/max/600/1*HeiVhdkTTG3ZBcsTRJzh9Q.gif\"><figcaption>Custom Scroll-bar visible on mouse hover scroll-host</figcaption></figure><blockquote>Do you know why your content is still scrollable?</blockquote>\n<p>To hide the scroll-bar we <strong>did not </strong>use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/overflow\"><strong>overflow: hidden</strong></a><strong>, which does two things to scrolling</strong></p>\n<ol>\n<li>\n<strong>Hides </strong>the scrollbars</li>\n<li>Disallows the user to scroll the content</li>\n</ol>\n<p>With this, you have also got the answer to the above question.</p>\n<h3>Let's hold the scroll bar, Scroll-Thumb it is</h3>\n<p>Our next step is to render the <strong>Scroll-thumb (box)</strong> or <strong>scroll-holder</strong>, through which a user can not only scroll the content through mouse dragging but it helps the user to identify the length of scrollable content with its positioning relative to <strong>scroll-bar</strong>. This is the most critical/complex part of this implementation. So, be attentive else first have a cup of coffee/tea 🍮 😉.</p>\n<h4>Scroll-thumb Rendering</h4>\n<p>First, we will add a new <strong>div</strong> element inside<strong> scroll-bar</strong> representing <strong>scroll-thumb</strong></p>\n<a href=\"https://medium.com/media/f0142b314674e0919ebfa9d12266e5c8/href\">https://medium.com/media/f0142b314674e0919ebfa9d12266e5c8/href</a><h4><strong>Scroll-thumb height calculation</strong></h4>\n<ul>\n<li>Next, we have to find the height of this scroll-thumb based on the scrollable content, its time to refresh the basic mathematic percentage formula.</li>\n<li>Don't take much stress its a simple math. Before moving to the formula, let's understand the below terminology</li>\n</ul>\n<blockquote>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight\"><strong>clientHeight</strong></a> : it’s the inner height of an element</blockquote>\n<blockquote>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight\"><strong>scrollHeight</strong></a><strong>:</strong> it’s the<strong> </strong>height of an element’s <strong>content</strong>\n</blockquote>\n<ul><li>Now, here is the formula where the height of RHV of scroll host or area which is scrollable</li></ul>\n<blockquote><strong><em>scrollThumbHeight = (clientHeight/scrollHeight) * clientHeight</em></strong></blockquote>\n<a href=\"https://medium.com/media/7269aabe0dc3c2c95c3ec82517dd8aa2/href\">https://medium.com/media/7269aabe0dc3c2c95c3ec82517dd8aa2/href</a><ul>\n<li>Set the minimum height of 20 px of scroll-box to avoid the negative height of the scroll box in case of very big scrollable content.</li>\n<li>In React, we will calculate this height just after our <strong>CustomScrollDiv</strong> element gets mounted in DOM, you can use the <strong>componentDidMount</strong> lifecycle method in case of the class-based component or <strong>useEffect</strong> hooks for a functional component.</li>\n</ul>\n<h4>Scroll-thumb positioning</h4>\n<ul><li>In order to change the position of above <strong>scroll-thumb </strong>on mouse-scrolling, we need to <strong>follow below steps<br>1. </strong>handle the <strong><em>scroll</em></strong> event on <strong>scroll-host<br>2. </strong>Change the <em>top</em> position of <strong>scroll-thumb</strong> on every scroll movement in handler registered in step 1 based on the following formula</li></ul>\n<blockquote>scrollThumbTop = (scrollTop/scrollHeight) * clientHeight</blockquote>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/600/1*GmoJ8KReZQNK7t3wphKRSA.gif\"><figcaption>Scroll-thumb moving on mouse scroll</figcaption></figure><ul><li>after this change, <strong>CustomScrollDiv</strong> component will look like this</li></ul>\n<a href=\"https://medium.com/media/1cf3459f5e346aacf0ea5099536b58d5/href\">https://medium.com/media/1cf3459f5e346aacf0ea5099536b58d5/href</a><h4>Scroll-Thumb dragging</h4>\n<ul>\n<li>Now, we have <strong>scroll-bar and scroll-thumb</strong> of the correct size and they are also moving correctly on mouse scroll in the scroll-host area. Still, mouse dragging on <strong>scroll-thumb</strong> is not working, let’s see how can we handle that:</li>\n<li>To handle the dragging on scroll-thumb, we need to handle the <br>1. <strong><em>mouseDown</em></strong> event on <strong>Scroll-thumb</strong> element and <br>2. <strong><em>mousemove</em></strong>, <strong><em>mouseup &amp; mouseleave </em></strong>on document</li>\n</ul>\n<blockquote>Why document?</blockquote>\n<blockquote>because while dragging you can move your mouse anywhere in the document, this is the default behaviour in all scroll-bar, you can verify this behaviour by doing scrolling while reading this story</blockquote>\n<ul>\n<li>To identify if a user is dragging scroll-thumb or not, we will keep the state <strong>isDragging </strong>in component and also need to store the Y coordinate of <strong>Scroll-Thumb</strong> element when a user starts dragging</li>\n<li>Now, let's walk through what we need to do in each event handler</li>\n</ul>\n<h4>First <strong><em>mouseDown </em></strong>Handler<strong><em> on </em>scroll-thumb</strong>\n</h4>\n<p>Mouse down on Scroll-thumb implies, a user going to start dragging through <strong>Scroll-Thumb</strong>, so, we are keeping the current Y coordinate location of <strong>Scroll-Thumb</strong>, and changing <strong>isDragging</strong> state to true</p>\n<a href=\"https://medium.com/media/1afb58654a6d226be777cb014043e061/href\">https://medium.com/media/1afb58654a6d226be777cb014043e061/href</a><h4>Document <strong><em>mouseleave and mouseup event</em></strong>\n</h4>\n<p><strong>mouseLeave</strong> and <strong>mouseUp</strong> event on document signify user going to stop the dragging if it is currently dragging the mouse-thumb, so we are changing <strong>isDragging</strong> state to false</p>\n<a href=\"https://medium.com/media/a7cac0e1644551cbea0c26473868963c/href\">https://medium.com/media/a7cac0e1644551cbea0c26473868963c/href</a><h4>Document <strong>mouseMove Handling</strong>\n</h4>\n<p>To give scrolling effect on dragging, we need to change the scroll-top of the below components:</p>\n<ul>\n<li>\n<strong>Scroll-Thumb:</strong> The change in scroll-top of scroll-thumb is the vertical change in the mouse position during dragging. To calculate that value we need the last <strong>scroll-thumb</strong> position which we have saved in l<strong>astScrollThumbPosition </strong>state. At <strong>line 9(</strong>see below<strong>)</strong> we are getting change in <strong>scroll-thumb</strong> position and in <strong>line 15</strong> we are incrementing <strong>scroll-thumb</strong> top by that value.</li>\n<li>\n<strong>Scroll-Host:</strong> The change in scroll top of scroll-host is calculated using below formula, if you have noticed new scroll-top is the percentage of change in mouse position during dragging.</li>\n</ul>\n<blockquote>newScrollHostTop = (scrollHeight / offsetHeight) * deltaY;</blockquote>\n<p>we are calculating this change in scrollTop at <strong>line 10</strong> and applying this at <strong>line 20</strong></p>\n<a href=\"https://medium.com/media/838050ecec681263c86e7adfa16bd18e/href\">https://medium.com/media/838050ecec681263c86e7adfa16bd18e/href</a><p>Now, we have achieved our goal and our Custom scroll-bar on hovering is ready which is also working on mouse dragging on <strong>Scroll-Thumb</strong>, this is how it will work now.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/600/1*jkiQri7Xc7f5vMPCgLyN4A.gif\"></figure><h3>Conclusion</h3>\n<p>I have tried my best to keep this story easy to understand though, it requires prerequisite like <a href=\"https://reactjs.org/\"><strong>React</strong></a>, <a href=\"https://reactjs.org/docs/hooks-intro.html\"><strong>React-Hooks</strong></a>, <strong>DOM</strong> layout, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model#HTML_DOM\"><strong>JS DoM API</strong></a> etc. Some sections might require extra elaboration but to keep the story concise and understandable for all kind of users I have mentioned only important points. Feel free to ask your doubts and suggestions in the comments section below.</p>\n<p>You are free to use the <a href=\"https://codesandbox.io/s/custom-scrollbar-on-hover-ps471?file=/src/CustomScrollDiv.js:162-177\">CustomScrollDiv</a> Component in your code but for production, you might need to handle extra stuff like, currently, I am calculating <strong>scroll-thumb</strong> height only after component mount, but it can change if a user resizes windows or if your scroll-host load data lazily and change scrollHeight lazily.</p>\n<p>Voila!! Now, we have our own Custom Scroll bar :)</p>\n<p>Stay Safe and Keep coding!!</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=d846194a7ea4\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://levelup.gitconnected.com/build-on-hover-custom-scrollbar-in-react-d846194a7ea4\">Build an On-hover Custom Scrollbar in React</a> was originally published in <a href=\"https://levelup.gitconnected.com/\">Level Up Coding</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n","enclosure":{},"categories":["scrollbar","html","jsdom","react","cross-browser"]},{"title":"IE Development, Testing and Debugging for macOS based web developer","pubDate":"2020-03-30 07:38:04","link":"https://medium.com/macoclock/ie-development-testing-and-debugging-for-macos-based-web-developer-558084410be1?source=rss-9e09aaed77b0------2","guid":"https://medium.com/p/558084410be1","author":"Harsh Kurra","thumbnail":"https://cdn-images-1.medium.com/max/2600/1*swRP-60cMyRt6OnYwXVt-w.png","description":"<div class=\"medium-feed-item\">\n<p class=\"medium-feed-image\"><a href=\"https://medium.com/macoclock/ie-development-testing-and-debugging-for-macos-based-web-developer-558084410be1?source=rss-9e09aaed77b0------2\"><img src=\"https://cdn-images-1.medium.com/max/2600/1*swRP-60cMyRt6OnYwXVt-w.png\" width=\"2829\"></a></p>\n<p class=\"medium-feed-snippet\">In the current era, when Internet Explorer is not even in the top 5 browsers list by usage and Microsoft itself moved to Chromium-based…</p>\n<p class=\"medium-feed-link\"><a href=\"https://medium.com/macoclock/ie-development-testing-and-debugging-for-macos-based-web-developer-558084410be1?source=rss-9e09aaed77b0------2\">Continue reading on Mac O’Clock »</a></p>\n</div>","content":"<div class=\"medium-feed-item\">\n<p class=\"medium-feed-image\"><a href=\"https://medium.com/macoclock/ie-development-testing-and-debugging-for-macos-based-web-developer-558084410be1?source=rss-9e09aaed77b0------2\"><img src=\"https://cdn-images-1.medium.com/max/2600/1*swRP-60cMyRt6OnYwXVt-w.png\" width=\"2829\"></a></p>\n<p class=\"medium-feed-snippet\">In the current era, when Internet Explorer is not even in the top 5 browsers list by usage and Microsoft itself moved to Chromium-based…</p>\n<p class=\"medium-feed-link\"><a href=\"https://medium.com/macoclock/ie-development-testing-and-debugging-for-macos-based-web-developer-558084410be1?source=rss-9e09aaed77b0------2\">Continue reading on Mac O’Clock »</a></p>\n</div>","enclosure":{},"categories":["cross-browser-testing","cross-browser","macos","web-development","internet-explorer"]},{"title":"It would be helpful if you can write something more which is not mentioned in official…","pubDate":"2019-11-12 12:21:37","link":"https://medium.com/@harshkurra21/it-would-be-helpful-if-you-can-write-something-more-which-is-not-mentioned-in-official-7f91f24fe9cd?source=rss-9e09aaed77b0------2","guid":"https://medium.com/p/7f91f24fe9cd","author":"Harsh Kurra","thumbnail":"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=7f91f24fe9cd","description":"\n<p>It would be helpful if you can write something more which is not mentioned in official documentation, I feel really bad how people just copying text from official documentation with different words on medium and other blog posts. ignore this if it was you who have contributed in the official documentation</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=7f91f24fe9cd\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<p>It would be helpful if you can write something more which is not mentioned in official documentation, I feel really bad how people just copying text from official documentation with different words on medium and other blog posts. ignore this if it was you who have contributed in the official documentation</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=7f91f24fe9cd\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":[]},{"title":"Gradient Support in Safari","pubDate":"2019-11-05 06:49:32","link":"https://medium.com/@harshkurra21/gradient-support-in-safari-546794bce33f?source=rss-9e09aaed77b0------2","guid":"https://medium.com/p/546794bce33f","author":"Harsh Kurra","thumbnail":"https://cdn-images-1.medium.com/max/1024/1*MiWlt4iVjV2RO0XSqilmeA.png","description":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*MiWlt4iVjV2RO0XSqilmeA.png\"></figure><p>Recently, I was using a Linear Gradient in one of my projects, to implement linear-gradient I have read complete usage documentation from <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient\">MDN</a>, It works like charm on Chrome, firefox but when I tested it on safari it was not working as expected then I have found out, safari requires special WebKit <a href=\"https://developer.apple.com/library/archive/documentation/InternetWeb/Conceptual/SafariVisualEffectsProgGuide/Gradients/Gradient.html\">prefixed gradient</a> function, instead of normal gradient function</p>\n<blockquote>background: -webkit-linear-gradient(aqua, white)</blockquote>\n<p>I have added two background styling like we generally do to support different vendor-specific properties</p>\n<blockquote>background: -webkit-linear-gradient(to right, rgb(245, 245, 245, 0.8), #f5f5f5 65%);</blockquote>\n<blockquote>background: linear-gradient(to right, rgb(245, 245, 245, 0.8), #f5f5f5 65%);</blockquote>\n<p>Still, it was not working on safari as expected maybe you have figured out the issue, but it took me more than 40 min to found the actual issue, yes the issue is, it should be <em>rgba</em> instead if <em>rgb, </em>well<em> </em>at my end we have some utility which is converting Hex color to RGBa color I have never realized it is giving <em>rgb</em> instead of <em>rgba</em> but why I was not able to found this bug earlier? because Chrome and Firefox both behaving correctly with <em>rgb</em>(245, 245, 245, 0.8) wheres safari requires rgb<strong>a</strong> in order to make it work.</p>\n<blockquote>background: -webkit-linear-gradient(to right, <strong>rgba</strong>(245, 245, 245, 0.8), #f5f5f5 65%);</blockquote>\n<blockquote>background: linear-gradient(to right, rgba(245, 245, 245, 0.8), #f5f5f5 65%);</blockquote>\n<p>You can also test this at your end, so always use rgba where ever requires to support maximum browsers in every scenario.</p>\n<p>Browser Version I was testing on:</p>\n<ol>\n<li>\n<strong>Chrome</strong>: 78.0.3904.70</li>\n<li>\n<strong>Safari</strong>: 12.0.3 (14606.4.5)</li>\n<li>\n<strong>Firefox</strong>: 70.0.1 (64-bit)</li>\n</ol>\n<p>References:</p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient\">linear-gradient()</a></p>\n<p><a href=\"https://developer.apple.com/library/archive/documentation/InternetWeb/Conceptual/SafariVisualEffectsProgGuide/Gradients/Gradient.html\">https://developer.apple.com/library/archive/documentation/InternetWeb/Conceptual/SafariVisualEffectsProgGuide/Gradients/Gradient.html</a></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=546794bce33f\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*MiWlt4iVjV2RO0XSqilmeA.png\"></figure><p>Recently, I was using a Linear Gradient in one of my projects, to implement linear-gradient I have read complete usage documentation from <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient\">MDN</a>, It works like charm on Chrome, firefox but when I tested it on safari it was not working as expected then I have found out, safari requires special WebKit <a href=\"https://developer.apple.com/library/archive/documentation/InternetWeb/Conceptual/SafariVisualEffectsProgGuide/Gradients/Gradient.html\">prefixed gradient</a> function, instead of normal gradient function</p>\n<blockquote>background: -webkit-linear-gradient(aqua, white)</blockquote>\n<p>I have added two background styling like we generally do to support different vendor-specific properties</p>\n<blockquote>background: -webkit-linear-gradient(to right, rgb(245, 245, 245, 0.8), #f5f5f5 65%);</blockquote>\n<blockquote>background: linear-gradient(to right, rgb(245, 245, 245, 0.8), #f5f5f5 65%);</blockquote>\n<p>Still, it was not working on safari as expected maybe you have figured out the issue, but it took me more than 40 min to found the actual issue, yes the issue is, it should be <em>rgba</em> instead if <em>rgb, </em>well<em> </em>at my end we have some utility which is converting Hex color to RGBa color I have never realized it is giving <em>rgb</em> instead of <em>rgba</em> but why I was not able to found this bug earlier? because Chrome and Firefox both behaving correctly with <em>rgb</em>(245, 245, 245, 0.8) wheres safari requires rgb<strong>a</strong> in order to make it work.</p>\n<blockquote>background: -webkit-linear-gradient(to right, <strong>rgba</strong>(245, 245, 245, 0.8), #f5f5f5 65%);</blockquote>\n<blockquote>background: linear-gradient(to right, rgba(245, 245, 245, 0.8), #f5f5f5 65%);</blockquote>\n<p>You can also test this at your end, so always use rgba where ever requires to support maximum browsers in every scenario.</p>\n<p>Browser Version I was testing on:</p>\n<ol>\n<li>\n<strong>Chrome</strong>: 78.0.3904.70</li>\n<li>\n<strong>Safari</strong>: 12.0.3 (14606.4.5)</li>\n<li>\n<strong>Firefox</strong>: 70.0.1 (64-bit)</li>\n</ol>\n<p>References:</p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient\">linear-gradient()</a></p>\n<p><a href=\"https://developer.apple.com/library/archive/documentation/InternetWeb/Conceptual/SafariVisualEffectsProgGuide/Gradients/Gradient.html\">https://developer.apple.com/library/archive/documentation/InternetWeb/Conceptual/SafariVisualEffectsProgGuide/Gradients/Gradient.html</a></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=546794bce33f\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["cross-browser","safari","css","webkit","gradient"]},{"title":"It will get saved under the Home directory...","pubDate":"2018-12-28 20:51:47","link":"https://medium.com/@harshkurra21/it-will-get-saved-under-the-home-directory-b3ed29fd1959?source=rss-9e09aaed77b0------2","guid":"https://medium.com/p/b3ed29fd1959","author":"Harsh Kurra","thumbnail":"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=b3ed29fd1959","description":"\n<p>It will get saved under the Home directory...</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=b3ed29fd1959\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<p>It will get saved under the Home directory...</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=b3ed29fd1959\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":[]},{"title":"Nobody talking about the boilerplate code of react-navigation everybody just doing ‘copy’ &amp; ‘paste’…","pubDate":"2018-03-13 18:11:21","link":"https://medium.com/@harshkurra21/nobody-talking-about-the-boilerplate-code-of-react-navigation-everybody-just-doing-copy-paste-2e5f69da9fa1?source=rss-9e09aaed77b0------2","guid":"https://medium.com/p/2e5f69da9fa1","author":"Harsh Kurra","thumbnail":"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=2e5f69da9fa1","description":"\n<p>Nobody talking about the boilerplate code of react-navigation everybody just doing ‘copy’ &amp; ‘paste’ from their website.</p>\n<p>Don’t follow such blogs the official documentation is far better(although they are also missing details on redux integration) than such pathetic blogs. blogs like this are just increasing traffic for medium and ‘claps’ for the writer.</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=2e5f69da9fa1\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<p>Nobody talking about the boilerplate code of react-navigation everybody just doing ‘copy’ &amp; ‘paste’ from their website.</p>\n<p>Don’t follow such blogs the official documentation is far better(although they are also missing details on redux integration) than such pathetic blogs. blogs like this are just increasing traffic for medium and ‘claps’ for the writer.</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=2e5f69da9fa1\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":[]}],"sideBarInfo":{"socialMedia":[{"link":"https://www.linkedin.com/in/harshkurra21/"},{"link":"https://github.com/hkurra"},{"link":"https://medium.com/@harshkurra21"},{"link":"https://stackoverflow.com/users/1446298/harsh-kurra","icon":"https://cdn.sstatic.net/Sites/stackoverflow/company/Img/logos/so/so-icon.svg"},{"link":"https://twitter.com/harshkurra"},{"link":"mailto:harshkurra21@gmail.com"}],"userName":"Harsh Kurra","siteTitle":"Harsh Kurra | Sr. Software Engineer","profileHeading":"Full Stack Developer | Maker | Open-Source-contributor","profileShortBio":"I am a full stack developer who loves writing code for a living. I am passionate about JavaScript, react, Material-UI, web development and Paneer.","blogRSSFeedURL":"https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/@harshkurra21","profilePic":"/images/profile.jpg","responsiveSideBar":false,"ogMetaImage":"https://og-image.now.sh/Harsh%20Kurra%20%7C%20%20Software%20Engineer.png?theme=dark&md=0&fontSize=125px&images=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Ffront%2Fassets%2Fdesign%2Fhyper-bw-logo.svg&images=https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F6569316%3Fs%3D460%26u%3D3d19201bd9684f4f39f5b105cb74aaf525354894%26v%3D4&widths=350&widths=350&heights=350&heights=350","menuList":[{"name":"About me","page":"about"},{"name":"Articles","page":"articles"},{"name":"My Skills","page":"skills"},{"name":"Portfolio","page":"portfolio"},{"name":"Resume","page":"https://firebasestorage.googleapis.com/v0/b/pictureappbackend-64593.appspot.com/o/portfolio%2FHarsh_Kurra_resume_Jan_2020.pdf?alt=media&token=e787c861-6efa-4ed1-b889-e330dc6c532a","externalLink":true}]}},"__N_SSG":true}